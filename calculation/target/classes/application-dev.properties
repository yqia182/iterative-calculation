### logging  ###
logging.level.com.fermedu.iterative.CalculationApplication=trace
#---------------------------------------------


### iterative calculation suggestions  ###
#top xx percent will be reserved for the next strand of iterative calculation
iterative.coefficient-selective-percentile = 0.3d
iterative.range-divider-granularity= 0.1d
#---------------------------------------------



### param suggestions ###  # rate = 0.002325925
iterative.param.suggestion.lag-range-min = 2.0
iterative.param.suggestion.lag-range-max = 200
iterative.param.suggestion.rate-range-min =0.00100
iterative.param.suggestion.rate-range-max = 0.004800
iterative.param.suggestion.minOD-range-min= -0.1
iterative.param.suggestion.minOD-range-max= 0.1
iterative.param.suggestion.maxOD-range-min=1.2
iterative.param.suggestion.maxOD-range-max=1.7

#---------------------------------------------


### mysql jpa ###
## �Զ�����ʽ
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.show-sql=false
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/iterative?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.datasource.username=iterative
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# how many sql queries to be included in one batch
spring.jpa.properties.hibernate.jdbc.batch_size=100
# if you need, remember there is also spring.jpa.properties.hibernate.order_updates=true
# because id auto-generation is employed, you will need this to auto generate id in bulk.
spring.jpa.properties.hibernate.order_inserts=true
